{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nvar FunFacts = /*#__PURE__*/function (_Component) {\n  _inherits(FunFacts, _Component);\n\n  var _super = _createSuper(FunFacts);\n\n  function FunFacts() {\n    var _this;\n\n    _classCallCheck(this, FunFacts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      didViewCountUp: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onVisibilityChange\", function (isVisible) {\n      if (isVisible) {\n        _this.setState({\n          didViewCountUp: true\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(FunFacts, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"section\", {\n        className: \"fun-facts-area ptb-100\"\n      }, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-fun-facts\"\n      }, __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"odometer\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 324 : 0,\n        duration: 3\n      }))), __jsx(\"span\", {\n        className: \"sign-icon\"\n      }, \"+\")), __jsx(\"p\", null, \"Project Completed\"), __jsx(\"div\", {\n        className: \"back-text\"\n      }, \"P\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-fun-facts\"\n      }, __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"odometer\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 100 : 0,\n        duration: 3\n      }))), __jsx(\"span\", {\n        className: \"sign-icon\"\n      }, \"%\")), __jsx(\"p\", null, \"Client Satisfaction\"), __jsx(\"div\", {\n        className: \"back-text\"\n      }, \"C\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-fun-facts\"\n      }, __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"odometer\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 15 : 0,\n        duration: 3\n      })))), __jsx(\"p\", null, \"Awards\"), __jsx(\"div\", {\n        className: \"back-text\"\n      }, \"A\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-fun-facts\"\n      }, __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"odometer\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 48 : 0,\n        duration: 3\n      }))), __jsx(\"span\", {\n        className: \"sign-icon\"\n      }, \"+\")), __jsx(\"p\", null, \"Expert Members\"), __jsx(\"div\", {\n        className: \"back-text\"\n      }, \"E\")))))));\n    }\n  }]);\n\n  return FunFacts;\n}(Component);\n\nexport default FunFacts;","map":{"version":3,"sources":["D:/prxx/DICECRM/Website/src/components/Common/FunFacts.js"],"names":["React","Component","CountUp","VisibilitySensor","FunFacts","didViewCountUp","isVisible","setState","onVisibilityChange","top","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nclass FunFacts extends Component {\n\n    state = {\n        didViewCountUp: false\n    };\n\n    onVisibilityChange = isVisible => {\n        if (isVisible) {\n            this.setState({ didViewCountUp: true });\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <section className=\"fun-facts-area ptb-100\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-3 col-sm-6\">\n                                <div className=\"single-fun-facts\">\n                                    <h3>\n                                        <span className=\"odometer\">\n                                            <VisibilitySensor\n                                                onChange={this.onVisibilityChange}\n                                                offset={{\n                                                    top: 10\n                                                }}\n                                                delayedCall\n                                            >\n                                                <CountUp\n                                                    start={0}\n                                                    end={\n                                                        this.state.didViewCountUp\n                                                        ? 324\n                                                        : 0\n                                                    }\n                                                    duration={3}\n                                                />\n                                            </VisibilitySensor>\n                                        </span>\n                                        <span className=\"sign-icon\">+</span>\n                                    </h3>\n                                    <p>Project Completed</p>\n                                    <div className=\"back-text\">P</div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-sm-6\">\n                                <div className=\"single-fun-facts\">\n                                    <h3>\n                                        <span className=\"odometer\">\n                                            <VisibilitySensor\n                                                onChange={this.onVisibilityChange}\n                                                offset={{\n                                                    top: 10\n                                                }}\n                                                delayedCall\n                                                >\n                                                <CountUp\n                                                    start={0}\n                                                    end={\n                                                        this.state.didViewCountUp\n                                                        ? 100\n                                                        : 0\n                                                    }\n                                                    duration={3}\n                                                />\n                                            </VisibilitySensor>\n                                        </span>\n                                        <span className=\"sign-icon\">%</span>\n                                    </h3>\n                                    <p>Client Satisfaction</p>\n                                    <div className=\"back-text\">C</div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-sm-6\">\n                                <div className=\"single-fun-facts\">\n                                    <h3>\n                                        <span className=\"odometer\">\n                                            <VisibilitySensor\n                                                onChange={this.onVisibilityChange}\n                                                offset={{\n                                                    top: 10\n                                                }}\n                                                delayedCall\n                                                >\n                                                <CountUp\n                                                    start={0}\n                                                    end={\n                                                        this.state.didViewCountUp\n                                                        ? 15\n                                                        : 0\n                                                    }\n                                                    duration={3}\n                                                />\n                                            </VisibilitySensor>\n                                        </span>\n                                    </h3>\n                                    <p>Awards</p>\n                                    <div className=\"back-text\">A</div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-sm-6\">\n                                <div className=\"single-fun-facts\">\n                                    <h3>\n                                        <span className=\"odometer\">\n                                            <VisibilitySensor\n                                                onChange={this.onVisibilityChange}\n                                                offset={{\n                                                    top: 10\n                                                }}\n                                                delayedCall\n                                                >\n                                                <CountUp\n                                                    start={0}\n                                                    end={\n                                                        this.state.didViewCountUp\n                                                        ? 48\n                                                        : 0\n                                                    }\n                                                    duration={3}\n                                                />\n                                            </VisibilitySensor>\n                                        </span>\n                                        <span className=\"sign-icon\">+</span>\n                                    </h3>\n                                    <p>Expert Members</p>\n                                    <div className=\"back-text\">E</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FunFacts;"]},"metadata":{},"sourceType":"module"}