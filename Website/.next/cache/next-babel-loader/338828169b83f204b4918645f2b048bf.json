{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING, ADD_QUANTITY_WITH_NUMBER, RESET_CART } from '../actions/action-types/cart-actions';\nvar initState = {\n  products: [{\n    id: 1,\n    title: \"Novel Bunch\",\n    price: 455.50,\n    image: require(\"../../images/shop/item1.jpg\"),\n    imageHover: require(\"../../images/shop/item1-hover.jpg\")\n  }, {\n    id: 2,\n    title: \"Book Chicks\",\n    price: 541.50,\n    image: require(\"../../images/shop/item2.jpg\"),\n    imageHover: require(\"../../images/shop/item2-hover.jpg\")\n  }, {\n    id: 3,\n    title: \"Book Divas\",\n    price: 140.50,\n    image: require(\"../../images/shop/item3.jpg\"),\n    imageHover: require(\"../../images/shop/item3-hover.jpg\")\n  }, {\n    id: 4,\n    title: \"Book Smart\",\n    price: 600.00,\n    image: require(\"../../images/shop/item4.jpg\"),\n    imageHover: require(\"../../images/shop/item4-hover.jpg\")\n  }, {\n    id: 5,\n    title: \"Book Broads\",\n    price: 655.50,\n    image: require(\"../../images/shop/item5.jpg\"),\n    imageHover: require(\"../../images/shop/item5-hover.jpg\")\n  }, {\n    id: 6,\n    title: \"Page Turners\",\n    price: 415.00,\n    image: require(\"../../images/shop/item6.jpg\"),\n    imageHover: require(\"../../images/shop/item6-hover.jpg\")\n  }],\n  addedItems: [],\n  total: 0,\n  shipping: 0\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === ADD_TO_CART) {\n    var addedItem = state.products.find(function (item) {\n      return item.id === action.id;\n    }); //check if the action id exists in the addedItems\n\n    var existed_item = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread({}, state, {\n        total: state.total + addedItem.price\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      var newTotal = state.total + addedItem.price;\n      return _objectSpread({}, state, {\n        addedItems: [].concat(_toConsumableArray(state.addedItems), [addedItem]),\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_QUANTITY_WITH_NUMBER) {\n    var _addedItem = state.products.find(function (item) {\n      return item.id === action.id;\n    }); //check if the action id exists in the addedItems\n\n\n    var _existed_item = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n\n    if (_existed_item) {\n      _addedItem.quantity += action.qty;\n      return _objectSpread({}, state, {\n        total: state.total + _addedItem.price * action.qty\n      });\n    } else {\n      _addedItem.quantity = action.qty; //calculating the total\n\n      var _newTotal = state.total + _addedItem.price * action.qty;\n\n      return _objectSpread({}, state, {\n        addedItems: [].concat(_toConsumableArray(state.addedItems), [_addedItem]),\n        total: _newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    var itemToRemove = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n    var new_items = state.addedItems.filter(function (item) {\n      return action.id !== item.id;\n    }); //calculating the total\n\n    var _newTotal2 = state.total - itemToRemove.price * itemToRemove.quantity;\n\n    return _objectSpread({}, state, {\n      addedItems: new_items,\n      total: _newTotal2\n    });\n  }\n\n  if (action.type === ADD_QUANTITY) {\n    var _addedItem2 = state.products.find(function (item) {\n      return item.id === action.id;\n    });\n\n    _addedItem2.quantity += 1;\n\n    var _newTotal3 = state.total + _addedItem2.price;\n\n    return _objectSpread({}, state, {\n      total: _newTotal3\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    var _addedItem3 = state.products.find(function (item) {\n      return item.id === action.id;\n    }); //if the qt == 0 then it should be removed\n\n\n    if (_addedItem3.quantity === 1) {\n      var _new_items = state.addedItems.filter(function (item) {\n        return item.id !== action.id;\n      });\n\n      var _newTotal4 = state.total - _addedItem3.price;\n\n      return _objectSpread({}, state, {\n        addedItems: _new_items,\n        total: _newTotal4\n      });\n    } else {\n      _addedItem3.quantity -= 1;\n\n      var _newTotal5 = state.total - _addedItem3.price;\n\n      return _objectSpread({}, state, {\n        total: _newTotal5\n      });\n    }\n  }\n\n  if (action.type === ADD_SHIPPING) {\n    return _objectSpread({}, state, {\n      shipping: state.shipping += 6\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread({}, state, {\n      shipping: state.shipping -= 6\n    });\n  }\n\n  if (action.type === RESET_CART) {\n    return _objectSpread({}, state, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\n\nexport var initStore = function initStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  return createStore(cartReducer, initialState, composeWithDevTools(applyMiddleware()));\n};","map":null,"metadata":{},"sourceType":"module"}